name: Build pkg armv7 S&C Version

on:
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  build:
    name: Build package and attach to release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x] # NB: when pkg-fetch bumps binaries, this must be updated
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install and pre-build
        run: |
          npm ci
          npm run build

      - name: Clone zwave-js fork
        run: |
          git clone https://github.com/smart-connective/zwave-js.git
          cd zwave-js
          corepack enable
          yarn install --mode=skip-build
          cd packages/eslint-plugin
          yarn build
          cd ../..
          yarn install
          yarn build

      - name: Patch zwave-js-ui with compiled zwave-js files
        run: |
          cp zwave-js/packages/zwave-js/build/cjs/lib/node/CCHandlers/NotificationCC.js node_modules/zwave-js/build/cjs/lib/node/CCHandlers/NotificationCC.js
          cp zwave-js/packages/zwave-js/build/cjs/lib/driver/Driver.js node_modules/zwave-js/build/cjs/lib/driver/Driver.js

      - name : Remove zwave-js fork
        run: |
          rm -rf zwave-js
      
      - uses: uraimo/run-on-arch-action@v2
        name: Package
        with:
          arch: none # armv7
          distro: none # bullseye

          dockerRunArgs: |
            --volume "${PWD}:/app"

          base_image: '--platform=linux/arm/v7 arm32v7/node:20-bookworm'

          # Rebuild .node modules for amv7
          run: |
            cd /app
            npm rebuild

      - name: Build for armv7
        run: |
          curl https://github.com/yao-pkg/pkg-binaries/releases/download/node20/built-v20.11.0-linux-armv7 -LOJ
          export PKG_NODE_PATH=$(pwd)/built-v20.11.0-linux-armv7
          npm run pkg -- --bundle --skip-build --arch=armv7

      - name: Upload artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: pkg-build
          path: ./build/pkg/*.zip

      - name: Upload binaries to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/pkg/*.zip
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
